---
const { img, waveImg, heading, text, cta } = Astro.props;
---

<div class="stack">
  
{ img &&
(
    <img class="img" src={ img.src } alt={ img.alt } />
)
}
{ waveImg &&
    (
        <img class="wave-img" src={ waveImg.src } alt={ waveImg.alt } />
    )
    }
    <div class="img-text__container">
        <h2 class="img-text__heading">{ heading }</h2>
        <p class="img-text__text">{ text }</p>

        { cta &&
        (<a class="img-text__cta" href={ cta.href }>{ cta.text }</a> 
        ) 
        }
    </div>
</div>


<style>

    .img-text__container {
        padding: 24px;
        display: grid;
        grid-template-columns: 1fr;
    }

    .img-text__heading {
        margin-bottom: 20px;
    }

    .img-text__cta {
        background-color: var(--main-color);
        padding: 16px 18px;
        color: #fff;
        border-radius: var(--border-radius);
        text-decoration: none;
        font-weight: 400;
        transition: 0.7s;
        margin-top: 38px;
        max-width: 200px;
        text-align: center;
        place-self: center;
    }

    .img-text__cta:hover {
        box-shadow: inset 0 -4.25em 0 0 var(--hover-color);
    }

    .wave-img {
        display: none;
    }

	@media only screen and (min-width: 60em) {
		.stack {
            display: grid;
            grid-template-areas: "stack";
        }

        .stack > * {
            grid-area: stack;
        }

        .img-text__container {
        display: flex;
        flex-direction: column;
        margin-top: 4%;
        margin-left: 2%;
        height: fit-content;
        width: 50%;
        background-color: #fff;
        opacity: 0.9;
        border-radius: var(--border-radius-img);
        padding: 90px 120px;
        }

        .img-text__cta {
            place-items: unset;
            place-self: unset;
            display: flex;
            align-items: center;
            justify-content: center;
    }

	}

</style>