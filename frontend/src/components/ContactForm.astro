---
const { heading, text } = Astro.props;
---
<div class="grid__container">
    <div class="form-text__container">
        <h1 class="form__heading">{ heading }</h1>
        <p class="form__text" set:html={ text }/>
        <p class="form__email">info@paphosgreengoddess.com</p>
    </div>


<form class="form__container">
        <label class="form__label" for="email">Your email</label>
        <input class="form__input" type="email" id="email" name="email" required>
        <label class="form__label" for="message">Your message</label>
        <textarea class="form__input" id="message" name="message" ></textarea>
        <p id="form-response"></p>
        <input class="form__button" id="submit" type="submit" value="Submit">
</form>
<script>
    const form = document.querySelector("form");
    const submitButton = document.querySelector("#submit");
    const formResponse = document.querySelector("#form-response");

    form.addEventListener("submit", (e) => {
      e.preventDefault();
      submitButton.disabled = true;
      const formData = new FormData(e.currentTarget);
      fetch("/contact-form-handler/", {
        method: "POST",
        body: formData,
      })
        .then((response) => {
          formResponse.classList.remove(...formResponse.classList);
          if (response.status === 201) {
            formResponse.innerText = "We received your message. Thank you very much! We'll be in touch!";
            formResponse.classList.add("success");
            form.reset(); 
          } else if (response.status === 400) {
            formResponse.innerText = "Please tell us your email address.";
            formResponse.classList.add("error");
          } else if (response.status === 500 || response.status === 404) {
            formResponse.innerText = "Something went wrong sending your registration...";
            formResponse.classList.add("error");
          }
        })
        .catch((response) => {
          formResponse.innerText = "Something went wrong sending your registration...";
          formResponse.classList.add("error");
        })
        .finally(() => {
          submitButton.disabled = false;
        });
    });
  </script>

</div>

<style is:inline>
    #form-response {
        display: none;
    }
    #form-response.success,
    #form-response.error {
        display: block;
        color: white;
        font-weight: bold;
    }
</style>

<style>

    .form__container {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.2em;
        padding: 2em 3em 3em 3em;
        background-color: var(--second-color);
        border-radius: 1em;
    }

    .form-text__container {
        padding: 4em 2em;
    }

    .form__heading {
        margin-bottom: 16px;
    }

    .form__text {
        font-size: var(--fs-400);
    }

    .form__email {
        color: var(--main-color);
        font-size: 1.2rem;
        margin-top: 1em;
    }

    .form__input {
        padding: 1em;
        border-radius: 1em;
        border: none;
        font-family: var(--ff-text);
        font-size: 1rem;
        color: var(--text-color);
        font-weight: 300;
    }

    input:focus,
    textarea:focus {
        outline: none;
        background-color: #e5fff2;
    }

    .form__label {
        color: #fff;
        font-family: var(--ff-heading);
        font-size: 1.2rem;
        margin-top: 8px;
        margin-bottom: -4px;
    }

    textarea {
        height: 200px;
        margin-bottom: 1em;
    }

    .form__button {
        background-color: var(--main-color);
        padding: 16px 18px;
        color: #fff;
        border-radius: var(--border-radius);
        text-decoration: none;
        font-size: var(--fs-300);
        font-weight: 400;
        transition: 0.7s;
        border: none;
        width: 50%;
        margin: auto;
        cursor: pointer;
    }

    .form__button:disabled {
        cursor: not-allowed;
    }

    .form__button:hover {
        box-shadow: inset 0 -4.25em 0 0 var(--hover-color);
    }

    @media only screen and (min-width: 40em) {
       

        .form__container {
            margin: 0 auto;
            width: 80%;
        }

        .form-text__container {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            height: 100%;
            width: 80%;
            margin-left: 6%;
            margin-top: 1%;
        }

        .form__heading {
        margin-top: auto;
        }

        .form__email {
        font-size: 1.6rem;
    }
    }

    @media only screen and (min-width: 60em) {

        .grid__container {
            display: grid;
            grid-template-columns: 1fr 1fr;
        }

        .form__container {
            margin: 2em;
        }
    }

    @media only screen and (min-width: 80em) {

        .form__container {
            width: 70%;
        }
    }
</style>